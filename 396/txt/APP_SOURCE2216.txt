[{ "key": "WFT_PIS_P_1304_1478965637474_0~CG_1304_1478964938412", "target" : "WF_DTT_INFO", "content" :"{ \"query\" : \"delete from wf_dtt_info where app_id=? and wftpa_id = ? and uicg_code = ?\", \"params\" : [ $DQ$4$DQ$, $DQ$WFT_PIS_P_1304_1478965637474_0$DQ$, $DQ$CG_1304_1478964938412$DQ$ ] }", "qry_type" : "D"  },{ "key": "4~CG_1304_1478964938412~WFT_PIS_P_1304_1478965637474_0", "target" : "UICG_INFO", "content" :"{ \"query\" : \"insert into uicg_info(app_id, uicg_code, wftpa_id, behaviour_json, component_json, custom_scripts_json, custom_styles_json, datasource_json, profile_json) values(?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$4$DQ$, $DQ$CG_1304_1478964938412$DQ$, $DQ$WFT_PIS_P_1304_1478965637474_0$DQ$, $DQ$global.Services = [$SQ$svccg0040c001$SQ$];angular.module($SL$$DQ$app$SL$$DQ$).controller($SL$$DQ$dpsinit$SL$$DQ$, function($scope, Scopes, $compile, $rootScope, $http, $injector, ModalService, $mdDialog) { Scopes.store($SQ$dpsinit$SQ$, $scope);$scope.calldpsinit = function() {try{ Scopes.get($SQ$concg0040c001$SQ$).E_1478965163301_CUSTOM_CONNECTORS(); } catch(e){ updateErrorLog($SQ$E_1478965163301_CUSTOM_CONNECTORS$SQ$,e); if (global.SessionInfo.DEBUG_MODE == $SQ$Y$SQ$) { updateDebugLog($SQ$E_1478965163301_CUSTOM_CONNECTORS$SQ$,e); } console.log($SQ$E_1478965163301_CUSTOM_CONNECTORS$SQ$); console.log(e); }};});angular.module($SL$$DQ$app$SL$$DQ$).controller($SL$$DQ$dpsraise$SL$$DQ$, function($scope, Scopes, $compile, $rootScope, $http, $injector, ModalService, $mdDialog) { Scopes.store($SQ$dpsraise$SQ$, $scope);  $scope.ALL_UICGCS = [] ;$scope.SCREEN_UICGCS = [{ UICG_ID : $SQ$cg0040$SQ$, UICGC_ID : $SQ$c001$SQ$, UICGC_CODE : $SQ$UICGC_1$SQ$,UICGC_PARAMS : $SQ$[]$SQ$ }] ;$scope.WFTPACTION_UNIQUE = 161 ;$scope.CallFunction = function (pFunction) { var f = $scope.Functions[pFunction]; if(angular.isFunction(f)){ f(); } }; $scope.Functions = {};$scope.destroyProfileDirectives = function (pProfUICGCS) { angular.forEach($scope.SCREEN_UICGCS, function (uicgc, Index) {  $.each(pProfUICGCS, function (index, item) { if(uicgc.UICGC_CODE == item.UICGC_CODE) { var DirName = uicgc.UICG_ID + uicgc.UICGC_ID;  var ctrlrid = $SQ$con$SQ$ + DirName;   var tempscope = Scopes.get(ctrlrid);  if (tempscope != undefined && angular.isFunction(tempscope.removeDirective)) { tempscope.removeDirective(); }  } });   });  };});angular.module($SL$$DQ$app$SL$$DQ$).factory($SL$$DQ$svccg0040c001$SL$$DQ$, [$SQ$$rootScope$SQ$, $SQ$$http$SQ$, $SQ$Scopes$SQ$, $SQ$$injector$SQ$, function ($rootScope, $http, Scopes, $injector) { var svccg0040c001 = {};return svccg0040c001;}]);angular.module($SL$$DQ$app$SL$$DQ$).controller($SL$$DQ$concg0040c001$SL$$DQ$, function($scope, Scopes, $compile, $rootScope, $interval, $http,  svccg0040c001 , $injector,$sce, $mdDialog, $filter) { Scopes.store($SQ$concg0040c001$SQ$, $scope);$scope.UICGC_ID = $SQ$c001$SQ$;$scope.UICG_ID = $SQ$cg0040$SQ$;$scope.HEADER = $SQ$Custom Widget for Master$SQ$;$scope.DISABLE = false;$scope.buttons = [];$scope.DEFAULT=[];$scope.menu = $scope.DEFAULT;$scope.rfidGrid = {    enableRowSelection: true,    multiSelect: true,    selectionRowHeaderWidth: 35,    rowHeight: 35,    showGridFooter: false,    columnDefs: [{        name: $SQ$rfid_number$SQ$,        displayName:$SQ$RFID Number$SQ$    }, {        name: $SQ$description$SQ$,        displayName:$SQ$Type$SQ$    }, {        name: $SQ$rf_status$SQ$,        displayName:$SQ$Status$SQ$    },{        name: $SQ$rf_type$SQ$,        displayName:$SQ$Type$SQ$    }]};$scope.rfidGrid.data = [];$scope.connectTagDevice = function() {    try {        var class1 = new ActiveXObject($SL$$DQ$RFID.TagReader$SL$$DQ$);        var initialize = class1.Connect();        if (initialize == $SL$$DQ$SUCCESS$SL$$DQ$) {            setInterval(function() {                var result = class1.readTags();                var resStr = $SL$$DQ$$SL$$DQ$;                var tags = result.split($SL$$DQ$|$SL$$DQ$);                for (var i = 0; i < tags.length; i++) {                    var tag = tags[i];                    var epc = tag.split($SL$$DQ$ $SL$$DQ$)[0];                    var ant = tag.split($SL$$DQ$ $SL$$DQ$)[1];                    var count = tag.split($SL$$DQ$ $SL$$DQ$)[2];                    var time = tag.split($SL$$DQ$ $SL$$DQ$)[3];                    resStr += epc + $SL$$DQ$$SL$$DQ$ + ant + $SL$$DQ$$SL$$DQ$ + count + $SL$$DQ$$SL$$DQ$ + time + $SL$$DQ$$SL$$DQ$;                    var obj = {};                    obj.description = $SL$$DQ$TAG$SL$$DQ$;                    obj.rf_status = $SL$$DQ$INACTIVE$SL$$DQ$;                    obj.rf_type = $SL$$DQ$RFID-TAG$SL$$DQ$;                    obj.rfid_number = epc;                }                $scope.checkDuplicateRfidCard(obj);            }, 2000);        } else {}    } catch (e) {        showAlert($SL$$DQ$SUCCESS$SL$$DQ$, e.toString(), $SQ$success$SQ$, 2)    }};$scope.connectRFIDDevice = function() {    showAlert($SL$$DQ$SUCCESS$SL$$DQ$, $SL$$DQ$CALLED$SL$$DQ$, $SQ$success$SQ$, 2);    try {        var class1 = new ActiveXObject($SL$$DQ$ContactlessDemoDLL.RFCardReader$SL$$DQ$);        var initialize = class1.Form_Initialize();        setInterval(function() {            var result = class1.ConnectCard();            if (result != $SL$$DQ$$SL$$DQ$) {                var res = result.split($SL$$DQ$|$SL$$DQ$)[0];                var atr = result.split($SL$$DQ$|$SL$$DQ$)[1];                var uid = result.split($SL$$DQ$|$SL$$DQ$)[2];                var cardName = result.split($SL$$DQ$|$SL$$DQ$)[3];                if (uid != $SL$$DQ$$SL$$DQ$) {                    var obj = {};                    obj.description = $SL$$DQ$CARD$SL$$DQ$;                    obj.rf_status = $SL$$DQ$INACTIVE$SL$$DQ$;                    obj.rf_type = $SL$$DQ$RFID-CARD$SL$$DQ$;                    obj.rfid_number = uid;                    $scope.checkDuplicateRfidCard(obj);                }            }        }, 2000);    } catch (e) {        showAlert($SL$$DQ$SUCCESS$SL$$DQ$, e.toString(), $SQ$success$SQ$, 2)    }};$scope.checkDuplicateRfidCard = function(obj) {    var rfid_no = obj.rfid_number;    if (rfid_no !== undefined && rfid_no !== $SL$$DQ$$SL$$DQ$ && rfid_no !== null) {        $http({            url:$SQ$/microsvc/rfidmaster$SQ$,            method: $SL$$DQ$POST$SL$$DQ$,            data: obj        }).then(function(response) {            showAlert($SL$$DQ$SUCCESS$SL$$DQ$, response.toString(), $SQ$success$SQ$, 2);            if (response.data.STATUS === $SL$$DQ$SUCCESS$SL$$DQ$) {                showAlert($SL$$DQ$SUCCESS$SL$$DQ$, response.data.STATUS, $SQ$success$SQ$, 2);                var status = false;                                for(var i in $scope.rfidGrid.data){                    if($scope.rfidGrid.data[i][$SL$$DQ$rfid_number$SL$$DQ$] === response.data.DATA[$SL$$DQ$rfid_number$SL$$DQ$]){                        status = true;                    }                }                                if(status == false){                    $scope.rfidGrid.data.push(response.data.DATA);                }                else{                                    }                            } else {                $scope.cardresult = $SL$$DQ$$SL$$DQ$;                  global.SessionInfo.root.ShowMessageWindow({            message:response.data.TYPE,            PopupId: $SL$$DQ$INFO_MSG$SL$$DQ$,            type: $SL$$DQ$INFORMATION$SL$$DQ$        });                            }        });    }};$scope.ClearRfidData = function(){    $scope.rfidGrid.data = [];    $scope.rfidGrid.updateData();};$scope.SaveRfidData = function() {    $http({        url:$SQ$/microsvc/saverfidmaster$SQ$,        method: $SL$$DQ$POST$SL$$DQ$,        data: $scope.rfidGrid.data    }).then(function(response) {        showAlert($SL$$DQ$SUCCESS$SL$$DQ$, response.toString(), $SQ$success$SQ$, 2);        if (response.data.STATUS === $SL$$DQ$SUCCESS$SL$$DQ$) {             global.SessionInfo.root.ShowMessageWindow({            message: $SQ$Details Saved Successfully$SQ$,            PopupId: $SL$$DQ$INFO_MSG$SL$$DQ$,            type: $SL$$DQ$INFORMATION$SL$$DQ$        });                $scope.ClearRfidData();            } else {              global.SessionInfo.root.ShowMessageWindow({            message:response.data.STATUS,            PopupId: $SL$$DQ$INFO_MSG$SL$$DQ$,            type: $SL$$DQ$INFORMATION$SL$$DQ$        });        }    });};function showAlert(pTitle, pContent, pType, pDuration) {   console.log(pContent)};$scope.E_1478965163301_CUSTOM_CONNECTORS = function() {global[$SQ$E_1478965163301$SQ$] = [];try {var paramInfo = { $SL$$DQ$Type$SL$$DQ$ : $SL$$DQ$PARENT$SL$$DQ$, $SL$$DQ$PARENT_ID$SL$$DQ$ : $SL$$DQ$$SL$$DQ$, $SL$$DQ$PARENT_TYPE$SL$$DQ$ : $SL$$DQ$ACTION$SL$$DQ$, $SL$$DQ$CHILD_ID$SL$$DQ$ : $SL$$DQ$concg0040c001$SL$$DQ$, $SL$$DQ$CHILD_TYPE$SL$$DQ$ : $SL$$DQ$COMP$SL$$DQ$, $SL$$DQ$PARENT_UICGC_CODE$SL$$DQ$ : $SL$$DQ$$SL$$DQ$, $SL$$DQ$EVENT_CODE$SL$$DQ$ : $SL$$DQ$E_1478965163301$SL$$DQ$, $SL$$DQ$PARENT_KEY$SL$$DQ$ : $SL$$DQ$$SL$$DQ$ };var orgParamInfo = paramInfo;if(typeof(pParentObj) != $SQ$undefined$SQ$){ if(pParentObj != undefined) { paramInfo = pParentObj;} }} catch(e){ updateErrorLog($SQ$E_1478965163301_CUSTOM_CONNECTORS$SQ$,e.stack.toString()); if (global.SessionInfo.DEBUG_MODE == $SQ$Y$SQ$) { updateDebugLog($SQ$E_1478965163301_CUSTOM_CONNECTORS$SQ$,e.stack.toString()); } console.log($SQ$E_1478965163301_CUSTOM_CONNECTORS$SQ$); console.log(e); }};$scope.E_1478965163301_INTERNALS = function(pParentObj) {};});angular.module($SL$$DQ$app$SL$$DQ$).controller($SL$$DQ$actions$SL$$DQ$, function($scope, Scopes, $compile, $rootScope, $interval, $http,  $injector, ModalService, $mdDialog) { Scopes.store($SQ$actions$SQ$, $scope);});$DQ$, $DQ$angular.module($SL$$DQ$app$SL$$DQ$).lazyDirective($SQ$dir161cg0040c001$SQ$, function($document, $compile) {        return {                restrict: $SQ$E$SQ$,                transclude: true,                template: $SQ$<div id=$SL$$DQ$content$SL$$DQ$ class=$SL$$DQ$app-content mainContent$SL$$DQ$ role=$SL$$DQ$main$SL$$DQ$ style=$SL$$DQ$top: 52px;width:100%$SL$$DQ$> <style>.poweredBy{display:none;}.form-horizontal .control-label{text-align: left;}.custom_001{margin-left:5%;}.label_custom{font-size: 15px; padding-top: 5px;}.oFloatBtn1{width: auto; height: 40px; line-height: 40px; padding: 0; text-align: center; letter-spacing: .5px; outline: 0; border-radius: 5px; padding: 0 10px; white-space: nowrap; cursor: pointer;}.jsoneditor .search{display:none;}.oDeployMain .oDeployContent .oDeployTable th, td{padding:0 !important;}.tree:before{border: none!important;}.jsoneditor div.tree button{height:18px !important;}.rfid_btn{display:block !important;margin-bottom: 30px !important;}</style> <div class=$SL$$DQ$row$SL$$DQ$> <div class=$SL$$DQ$col-md-12$SL$$DQ$> <h3 class=$SL$$DQ$text-2x$SL$$DQ$ style=$SL$$DQ$text-align: center;margin-left: -15%;$SL$$DQ$>RFID Enrollment</h3> </div> <div class=$SL$$DQ$col-md-12$SL$$DQ$> <div> <div class=$SL$$DQ$col-md-9$SL$$DQ$> <div ui-grid=$SL$$DQ$rfidGrid$SL$$DQ$ style=$SL$$DQ$width:600px;margin:0 auto;position:relative;height:250px;margin-left: 18%;$SL$$DQ$></div> </div> <div class=$SL$$DQ$col-md-3$SL$$DQ$> <div style=$SL$$DQ$width: 80%;margin-left: -20px;$SL$$DQ$> <p class=$SL$$DQ$theme-btn rfid_btn$SL$$DQ$ ng-click=$SL$$DQ$connectRFIDDevice()$SL$$DQ$> <span translate=$SL$$DQ$$SL$$DQ$ class=$SL$$DQ$ng-scope$SL$$DQ$> Card Connect</span> </p> <p class=$SL$$DQ$theme-btn rfid_btn$SL$$DQ$> <span translate=$SL$$DQ$$SL$$DQ$ class=$SL$$DQ$ng-scope$SL$$DQ$>Card Disconnect</span> </p> <p class=$SL$$DQ$theme-btn rfid_btn$SL$$DQ$ ng-click=$SL$$DQ$connectTagDevice()$SL$$DQ$> <span translate=$SL$$DQ$$SL$$DQ$ class=$SL$$DQ$ng-scope$SL$$DQ$> Tag Connect</span> </p> <p class=$SL$$DQ$theme-btn rfid_btn$SL$$DQ$> <span translate=$SL$$DQ$$SL$$DQ$ class=$SL$$DQ$ng-scope$SL$$DQ$>Tag Disconnect</span> </p> </div> </div> </div> </div> <div class=$SL$$DQ$col-md-12$SL$$DQ$> <div style=$SL$$DQ$margin-left: 33%;text-align:left;margin-top:10px;$SL$$DQ$> <div class=$SL$$DQ$theme-btn$SL$$DQ$ > <span translate=$SL$$DQ$$SL$$DQ$ class=$SL$$DQ$ng-scope$SL$$DQ$ ng-click=$SL$$DQ$SaveRfidData()$SL$$DQ$>Save</span> </div> <div class=$SL$$DQ$theme-btn$SL$$DQ$ > <span translate=$SL$$DQ$$SL$$DQ$ class=$SL$$DQ$ng-scope$SL$$DQ$ ng-click=$SL$$DQ$ClearRfidData()$SL$$DQ$>Clear</span> </div> </div> </div> </div></div>$SQ$,                link: function(scope, elm, ngModel, $index) {                        var element = elm;                    }          }    });$DQ$, $DQ$$DQ$, $DQ$$DQ$, $DQ$angular.module($SL$$DQ$app$SL$$DQ$).controller($SL$$DQ$dsinfo$SL$$DQ$, function($scope, Scopes, $compile, $rootScope, $http, jsonPath) {Scopes.store($SQ$dsinfo$SQ$, $scope);$scope.jsonPath = jsonPath;$scope.DSInfo = {params: { uicgc: []}};$scope.EventData = {params: { uicgc: []}};$scope.KeyColumnInfo = {params: { uicgc: [{code:$SL$$DQ$DEFAULT$SL$$DQ$,event:[{code:$SL$$DQ$DEFAULT$SL$$DQ$,dt:[]}]}]}};});$DQ$, $DQ${$SL$$DQ$PROFILES$SL$$DQ$: [{$SL$$DQ$PROFILE_CODE$SL$$DQ$:$SL$$DQ$PR_1304_1478965142300$SL$$DQ$,$SL$$DQ$PROFILE_DESC$SL$$DQ$:$SL$$DQ$Custom Master Layout$SL$$DQ$,$SL$$DQ$PROFILE_TYPE$SL$$DQ$:$SL$$DQ$MAIN$SL$$DQ$,$SL$$DQ$PROFILE_CONTENT$SL$$DQ$:$SL$$DQ$<div class=$SQ$Profile$SQ$ style=$SQ$position: relative;height:100%;width:100%;$SQ$><div id=$SQ$concg0040c001$SQ$ ng-controller =$SQ$concg0040c001$SQ$ ng-keydown=$SQ$KEY_DOWN($event)$SQ$ ng-keyup=$SQ$KEY_UP($event)$SQ$ tabindex=$SQ$0$SQ$ class=$SQ$Profile-container$SQ$ style=$SQ$top: 0%; height: 100%; left: 0%; width: 100%;$SQ$><dir161cg0040c001 ></dir161cg0040c001></div><div ng-controller =$SQ$dpsinit$SQ$ style=$SQ$display:None$SQ$></div><div  ng-controller =$SQ$dpsraise$SQ$ style=$SQ$display:None$SQ$></div><div ng-controller =$SQ$dsinfo$SQ$ style=$SQ$display:None$SQ$></div><div ng-controller =$SQ$actions$SQ$ style=$SQ$display:None$SQ$></div></div>$SL$$DQ$,$SL$$DQ$PROFILE_UICGCS$SL$$DQ$ : [{ $SL$$DQ$UICGC_CODE$SL$$DQ$ : $SL$$DQ$UICGC_1$SL$$DQ$,$SL$$DQ$LEFT$SL$$DQ$ : $SL$$DQ$0%$SL$$DQ$, $SL$$DQ$TOP$SL$$DQ$ : $SL$$DQ$0%$SL$$DQ$, $SL$$DQ$HEIGHT$SL$$DQ$ : $SL$$DQ$100%$SL$$DQ$, $SL$$DQ$WIDTH$SL$$DQ$ : $SL$$DQ$100%$SL$$DQ$, $SL$$DQ$CONTROLLER_ID$SL$$DQ$ : $SL$$DQ$concg0040c001$SL$$DQ$ }] ,$SL$$DQ$PROFILE_HEIGHT$SL$$DQ$:$SL$$DQ$100%$SL$$DQ$}]}$DQ$] }", "qry_type" : "I"  },{ "key": "DEFAULT_SETTINGS~4", "target" : "SCAN_SETTINGS", "content" :"{ \"query\" : \"insert into scan_settings(scs_code,scan_options,app_id) values(?,?,?)\", \"params\" : [$DQ$RANGER_SCAN$DQ$,$DQ$<?xml version=$SQ$1.0$SQ$?><Scanner><Function Name=$SQ$ItemIndex$SQ$ Model1=$SQ$CR-180,CR-50$SQ$ Model2=$SQ$$SQ$ ></Function> <Function Name=$SQ$ItemLength$SQ$ Model1=$SQ$4$SQ$ Model2=$SQ$5$SQ$ ></Function> <Function Name=$SQ$TransportItemInPocket$SQ$ Model1=$SQ$CR-180,CR-180II,CR-55,CR-50$SQ$ Model2=$SQ$EXCELLA,ORION,FB 20$SQ$ ></Function> <Function Name=$SQ$TransportReadyToFeedState$SQ$ Model1=$SQ$CR-180,CR-180II,CR-55,FB 20,CR-50$SQ$ Model2=$SQ$$SQ$ ></Function> <Function Name=$SQ$SetEndorsement$SQ$ Model1=$SQ$CR-180,CR-180II,CR-55,FB 20,CR-50$SQ$ Model2=$SQ$$SQ$></Function> <Function Name=$SQ$UpdateEndorsementString$SQ$ Model1=$SQ$CR-180,CR-180II,CR-55,FB 20,CR-50$SQ$ Model2=$SQ$EXCELLA,ORION$SQ$></Function> <Function Name=$SQ$ChangeSortOption$SQ$ Model1=$SQ$CR-180,CR-180II,CR-55,FB 20,CR-50$SQ$ Model2=$SQ$$SQ$ ></Function> <ScannerInfo ModelName=$SQ$CR-180$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Endorser$SQ$ Parameter=$SQ$Font$SQ$ Value=$SQ$Small$SQ$/> <ScannerInfo ModelName=$SQ$CR-180$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Endorser$SQ$ Parameter=$SQ$PrintSide$SQ$ Value=$SQ$LeadEdge$SQ$/> <ScannerInfo ModelName=$SQ$CR-180$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Endorser$SQ$ Parameter=$SQ$YPosition$SQ$ Value=$SQ$200$SQ$/> <ScannerInfo ModelName=$SQ$CR-180II$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Endorser$SQ$ Parameter=$SQ$Font$SQ$ Value=$SQ$Small$SQ$/> <ScannerInfo ModelName=$SQ$CR-180II$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Endorser$SQ$ Parameter=$SQ$PrintSide$SQ$ Value=$SQ$LeadEdge$SQ$/> <ScannerInfo ModelName=$SQ$CR-180II$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Endorser$SQ$ Parameter=$SQ$YPosition$SQ$ Value=$SQ$200$SQ$/> <ScannerInfo ModelName=$SQ$VNACH:CR-180$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Endorser$SQ$ Parameter=$SQ$Font$SQ$ Value=$SQ$Small$SQ$/> <ScannerInfo ModelName=$SQ$VNACH:CR-180$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Endorser$SQ$ Parameter=$SQ$PrintSide$SQ$ Value=$SQ$LeadEdge$SQ$/> <ScannerInfo ModelName=$SQ$VNACH:CR-180$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Endorser$SQ$ Parameter=$SQ$YPosition$SQ$ Value=$SQ$200$SQ$/> <ScannerInfo ModelName=$SQ$VNACH:CR-180II$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Endorser$SQ$ Parameter=$SQ$Font$SQ$ Value=$SQ$Small$SQ$/> <ScannerInfo ModelName=$SQ$VNACH:CR-180II$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Endorser$SQ$ Parameter=$SQ$PrintSide$SQ$ Value=$SQ$LeadEdge$SQ$/> <ScannerInfo ModelName=$SQ$VNACH:CR-180II$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Endorser$SQ$ Parameter=$SQ$YPosition$SQ$ Value=$SQ$200$SQ$/> <ScannerInfo ModelName=$SQ$Orion$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$FrontImage1$SQ$ Parameter=$SQ$BinarizationParameter$SQ$ Value=$SQ$0$SQ$ /> <ScannerInfo ModelName=$SQ$Orion$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$FrontImage2$SQ$ Parameter=$SQ$JpegQfactor$SQ$ Value=$SQ$0$SQ$ /> <ScannerInfo ModelName=$SQ$Orion$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$FrontImage3$SQ$ Parameter=$SQ$JpegQfactor$SQ$ Value=$SQ$0$SQ$ /> <ScannerInfo ModelName=$SQ$Orion$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$RearImage1$SQ$ Parameter=$SQ$BinarizationParameter$SQ$ Value=$SQ$0$SQ$ /> <ScannerInfo ModelName=$SQ$Orion$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$RearImage2$SQ$ Parameter=$SQ$JpegQfactor$SQ$ Value=$SQ$0$SQ$ /> <ScannerInfo ModelName=$SQ$Orion$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$RearImage3$SQ$ Parameter=$SQ$JpegQfactor$SQ$ Value=$SQ$0$SQ$ /> <ScannerInfo ModelName=$SQ$Orion$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$OptionalDevices$SQ$ Parameter=$SQ$NeedMicrEncoder$SQ$ Value=$SQ$true1$SQ$ /> <ScannerInfo ModelName=$SQ$Orion$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$OptionalDevices$SQ$ Parameter=$SQ$NeedRearEndorser$SQ$ Value=$SQ$rubban$SQ$ /> <ScannerInfo ModelName=$SQ$Orion$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$ExceptionHandling$SQ$ Parameter=$SQ$Enabled$SQ$ Value=$SQ$ssddd$SQ$ /> <ScannerInfo ModelName=$SQ$VNACH:Orion$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$FrontImage1$SQ$ Parameter=$SQ$BinarizationParameter$SQ$ Value=$SQ$0$SQ$ /> <ScannerInfo ModelName=$SQ$VNACH:Orion$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$FrontImage2$SQ$ Parameter=$SQ$JpegQfactor$SQ$ Value=$SQ$80$SQ$ /> <ScannerInfo ModelName=$SQ$VNACH:Orion$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$FrontImage3$SQ$ Parameter=$SQ$JpegQfactor$SQ$ Value=$SQ$0$SQ$ /> <ScannerInfo ModelName=$SQ$VNACH:Orion$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$RearImage1$SQ$ Parameter=$SQ$BinarizationParameter$SQ$ Value=$SQ$0$SQ$ /> <ScannerInfo ModelName=$SQ$VNACH:Orion$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$RearImage2$SQ$ Parameter=$SQ$JpegQfactor$SQ$ Value=$SQ$0$SQ$ /> <ScannerInfo ModelName=$SQ$VNACH:Orion$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$RearImage3$SQ$ Parameter=$SQ$JpegQfactor$SQ$ Value=$SQ$0$SQ$ /> <ScannerInfo ModelName=$SQ$VNACH:Orion$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$OptionalDevices$SQ$ Parameter=$SQ$NeedMicrEncoder$SQ$ Value=$SQ$true1$SQ$ /> <ScannerInfo ModelName=$SQ$VNACH:Orion$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$OptionalDevices$SQ$ Parameter=$SQ$NeedRearEndorser$SQ$ Value=$SQ$rubban$SQ$ /> <ScannerInfo ModelName=$SQ$VNACH:Orion$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$ExceptionHandling$SQ$ Parameter=$SQ$Enabled$SQ$ Value=$SQ$ssddd$SQ$ /> <ScannerInfo ModelName=$SQ$FB 20$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Imaging$SQ$ Parameter=$SQ$Brightness$SQ$ Value=$SQ$128$SQ$ /> <ScannerInfo ModelName=$SQ$FB 20$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Imaging$SQ$ Parameter=$SQ$FrontJpegQuality$SQ$ Value=$SQ$75$SQ$ /> <ScannerInfo ModelName=$SQ$FB 20$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Imaging$SQ$ Parameter=$SQ$RearJpegQuality$SQ$ Value=$SQ$75$SQ$ /> <ScannerInfo ModelName=$SQ$VNACH:FB 20$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Imaging$SQ$ Parameter=$SQ$Brightness$SQ$ Value=$SQ$128$SQ$ /> <ScannerInfo ModelName=$SQ$VNACH:FB 20$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Imaging$SQ$ Parameter=$SQ$FrontJpegQuality$SQ$ Value=$SQ$75$SQ$ /> <ScannerInfo ModelName=$SQ$VNACH:FB 20$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Imaging$SQ$ Parameter=$SQ$RearJpegQuality$SQ$ Value=$SQ$75$SQ$ /> <ScannerInfo ModelName=$SQ$PaniniVisionX$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Image.Front.Grayscale$SQ$ Parameter=$SQ$CompressionQuality$SQ$ Value=$SQ$75$SQ$ /> <ScannerInfo ModelName=$SQ$PaniniVisionX$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Image.Rear.Grayscale$SQ$ Parameter=$SQ$CompressionQuality$SQ$ Value=$SQ$75$SQ$ /> <ScannerInfo ModelName=$SQ$PaniniVisionX$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Image.Front.Color$SQ$ Parameter=$SQ$CompressionQuality$SQ$ Value=$SQ$75$SQ$ /> <ScannerInfo ModelName=$SQ$PaniniVisionX$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Image.Rear.Color$SQ$ Parameter=$SQ$CompressionQuality$SQ$ Value=$SQ$75$SQ$ /> <ScannerInfo ModelName=$SQ$PaniniVisionX$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Image.Front.BW$SQ$ Parameter=$SQ$CompressionQuality$SQ$ Value=$SQ$75$SQ$ /> <ScannerInfo ModelName=$SQ$PaniniVisionX$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Image.Rear.BW$SQ$ Parameter=$SQ$CompressionQuality$SQ$ Value=$SQ$75$SQ$ /> <ScannerInfo ModelName=$SQ$VNACH:PaniniVisionX$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Image.Front.Grayscale$SQ$ Parameter=$SQ$CompressionQuality$SQ$ Value=$SQ$75$SQ$ /> <ScannerInfo ModelName=$SQ$VNACH:PaniniVisionX$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Image.Rear.Grayscale$SQ$ Parameter=$SQ$CompressionQuality$SQ$ Value=$SQ$75$SQ$ /> <ScannerInfo ModelName=$SQ$VNACH:PaniniVisionX$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Image.Front.Color$SQ$ Parameter=$SQ$CompressionQuality$SQ$ Value=$SQ$75$SQ$ /> <ScannerInfo ModelName=$SQ$VNACH:PaniniVisionX$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Image.Rear.Color$SQ$ Parameter=$SQ$CompressionQuality$SQ$ Value=$SQ$75$SQ$ /> <ScannerInfo ModelName=$SQ$VNACH:PaniniVisionX$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Image.Front.BW$SQ$ Parameter=$SQ$CompressionQuality$SQ$ Value=$SQ$75$SQ$ /> <ScannerInfo ModelName=$SQ$VNACH:PaniniVisionX$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Image.Rear.BW$SQ$ Parameter=$SQ$CompressionQuality$SQ$ Value=$SQ$75$SQ$ /> <ScannerInfo ModelName=$SQ$CTS_LS150$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Image.Front.Grayscale$SQ$ Parameter=$SQ$JpegQuality$SQ$ Value=$SQ$50$SQ$ /> <ScannerInfo ModelName=$SQ$CTS_LS150$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Image.Rear.Grayscale$SQ$ Parameter=$SQ$JpegQuality$SQ$ Value=$SQ$50$SQ$ /> <ScannerInfo ModelName=$SQ$CTS_LS150$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$CardScanner.Front.Grayscale$SQ$ Parameter=$SQ$JpegQuality$SQ$ Value=$SQ$50$SQ$ /> <ScannerInfo ModelName=$SQ$CTS_LS150$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$CardScanner.Rear.Grayscale$SQ$ Parameter=$SQ$JpegQuality$SQ$ Value=$SQ$50$SQ$ /> <ScannerInfo ModelName=$SQ$CTS_LS150$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Image.Bitonal$SQ$ Parameter=$SQ$AdaptiveThreshold$SQ$ Value=$SQ$450$SQ$ /> <ScannerInfo ModelName=$SQ$VNACH:CTS_LS150$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Image.Front.Grayscale$SQ$ Parameter=$SQ$JpegQuality$SQ$ Value=$SQ$50$SQ$ /> <ScannerInfo ModelName=$SQ$VNACH:CTS_LS150$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Image.Rear.Grayscale$SQ$ Parameter=$SQ$JpegQuality$SQ$ Value=$SQ$50$SQ$ /> <ScannerInfo ModelName=$SQ$VNACH:CTS_LS150$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$CardScanner.Front.Grayscale$SQ$ Parameter=$SQ$JpegQuality$SQ$ Value=$SQ$50$SQ$ /> <ScannerInfo ModelName=$SQ$VNACH:CTS_LS150$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$CardScanner.Rear.Grayscale$SQ$ Parameter=$SQ$JpegQuality$SQ$ Value=$SQ$50$SQ$ /> <ScannerInfo ModelName=$SQ$VNACH:CTS_LS150$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Image.Bitonal$SQ$ Parameter=$SQ$AdaptiveThreshold$SQ$ Value=$SQ$450$SQ$ /> <ScannerInfo ModelName=$SQ$vNACH:CR-180II$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Imaging$SQ$ Parameter=$SQ$JpegQuality$SQ$ Value=$SQ$80$SQ$ /> <ScannerInfo ModelName=$SQ$vNACH:CR-180II$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Imaging$SQ$ Parameter=$SQ$FrontBrightness$SQ$ Value=$SQ$0$SQ$ /> <ScannerInfo ModelName=$SQ$vNACH:CR-180II$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Imaging$SQ$ Parameter=$SQ$BackBrightness$SQ$ Value=$SQ$0$SQ$ /> <ScannerInfo ModelName=$SQ$vNACH:CR-180II$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$FrontBitonalImage$SQ$ Parameter=$SQ$TextEnhancedBrightness$SQ$ Value=$SQ$0$SQ$ /> <ScannerInfo ModelName=$SQ$vNACH:CR-180II$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$RearBitonalImage$SQ$ Parameter=$SQ$TextEnhancedBrightness$SQ$ Value=$SQ$0$SQ$ /> <ScannerInfo ModelName=$SQ$vNACH:CR-180$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Imaging$SQ$ Parameter=$SQ$JpegQuality$SQ$ Value=$SQ$75$SQ$ /> <ScannerInfo ModelName=$SQ$vNACH:CR-180$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Imaging$SQ$ Parameter=$SQ$FrontBrightness$SQ$ Value=$SQ$128$SQ$ /> <ScannerInfo ModelName=$SQ$vNACH:CR-180$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$Imaging$SQ$ Parameter=$SQ$BackBrightness$SQ$ Value=$SQ$128$SQ$ /> <ScannerInfo ModelName=$SQ$vNACH:CR-180$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$FrontBitonalImage$SQ$ Parameter=$SQ$TextEnhancedBrightness$SQ$ Value=$SQ$128$SQ$ /> <ScannerInfo ModelName=$SQ$vNACH:CR-180$SQ$ Options=$SQ$GetDriverOptions$SQ$ Section=$SQ$RearBitonalImage$SQ$ Parameter=$SQ$TextEnhancedBrightness$SQ$ Value=$SQ$128$SQ$ /> </Scanner>$DQ$,$DQ$4$DQ$] }", "qry_type" : "I"  }]